#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุฅุนุงุฏุฉ ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจุดูู ูุจุงุดุฑ
"""

import os
import sys
import sqlite3
from pathlib import Path
import logging

# ุฅุถุงูุฉ ุงููุณุงุฑ ุงูุฌุฐุฑ ูููุดุฑูุน
sys.path.insert(0, str(Path(__file__).parent))

import config

def recreate_database():
    """ุฅุนุงุฏุฉ ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    try:
        # ุฅูุดุงุก ูุฌูุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช
        config.DATABASE_DIR.mkdir(parents=True, exist_ok=True)
        
        # ุงุชุตุงู ูุจุงุดุฑ ุจูุงุนุฏุฉ ุงูุจูุงูุงุช (ุณูุชู ุฅูุดุงุคูุง ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ)
        conn = sqlite3.connect(str(config.DATABASE_PATH))
        conn.row_factory = sqlite3.Row
        conn.execute("PRAGMA foreign_keys = ON")
        
        cursor = conn.cursor()
        
        print("๐ ุฅูุดุงุก ุงูุฌุฏุงูู...")
        
        # ุญุฐู ุงูุฌุฏุงูู ุงูููุฌูุฏุฉ
        tables_to_drop = [
            'external_income', 'expenses', 'salaries', 'additional_fees', 
            'installments', 'students', 'teachers', 'employees', 
            'schools', 'users', 'app_settings'
        ]
        
        for table in tables_to_drop:
            try:
                cursor.execute(f"DROP TABLE IF EXISTS {table}")
                print(f"  - ุชู ุญุฐู ุฌุฏูู {table}")
            except:
                pass
        
        # ุฅูุดุงุก ุงูุฌุฏุงูู
        
        # ุฌุฏูู ุงููุณุชุฎุฏููู
        cursor.execute("""
            CREATE TABLE users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                username TEXT UNIQUE NOT NULL DEFAULT 'admin',
                password TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุณุชุฎุฏููู")
        
        # ุฌุฏูู ุงููุฏุงุฑุณ
        cursor.execute("""
            CREATE TABLE schools (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name_ar TEXT NOT NULL,
                name_en TEXT,
                logo_path TEXT,
                address TEXT,
                phone TEXT,
                principal_name TEXT,
                school_types TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุฏุงุฑุณ")
        
        # ุฌุฏูู ุงูุทูุงุจ
        cursor.execute("""
            CREATE TABLE students (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                national_id_number TEXT,
                school_id INTEGER NOT NULL,
                grade TEXT NOT NULL,
                section TEXT NOT NULL,
                academic_year TEXT,
                gender TEXT NOT NULL,
                birthdate DATE,
                phone TEXT,
                guardian_name TEXT,
                guardian_phone TEXT,
                total_fee DECIMAL(10,2) NOT NULL,
                start_date DATE NOT NULL,
                status TEXT DEFAULT 'ูุดุท',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูุทูุงุจ")
        
        # ุฌุฏูู ุงูุฃูุณุงุท
        cursor.execute("""
            CREATE TABLE installments (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                student_id INTEGER NOT NULL,
                amount DECIMAL(10,2) NOT NULL,
                payment_date DATE NOT NULL,
                payment_time TIME NOT NULL,
                notes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูุฃูุณุงุท")
        
        # ุฌุฏูู ุงูุฑุณูู ุงูุฅุถุงููุฉ
        cursor.execute("""
            CREATE TABLE additional_fees (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                student_id INTEGER NOT NULL,
                fee_type TEXT NOT NULL,
                amount DECIMAL(10,2) NOT NULL,
                paid BOOLEAN DEFAULT FALSE,
                payment_date DATE,
                added_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                notes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (student_id) REFERENCES students(id) ON DELETE CASCADE
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูุฑุณูู ุงูุฅุถุงููุฉ")
        
        # ุฌุฏูู ุงููุนูููู
        cursor.execute("""
            CREATE TABLE teachers (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                school_id INTEGER NOT NULL,
                class_hours INTEGER NOT NULL DEFAULT 0,
                monthly_salary DECIMAL(10,2) NOT NULL,
                phone TEXT,
                notes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุนูููู")
        
        # ุฌุฏูู ุงูููุธููู
        cursor.execute("""
            CREATE TABLE employees (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                school_id INTEGER NOT NULL,
                job_type TEXT NOT NULL,
                monthly_salary DECIMAL(10,2) NOT NULL,
                phone TEXT,
                notes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูููุธููู")
        
        # ุฌุฏูู ุงูุฅูุฑุงุฏุงุช ุงูุฎุงุฑุฌูุฉ - ูุน ููู ุงูุชุฑุงุถูุฉ ูุญู ูุดููุฉ NOT NULL
        cursor.execute("""
            CREATE TABLE external_income (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                school_id INTEGER NOT NULL,
                title TEXT NOT NULL DEFAULT 'ุฅูุฑุงุฏ ุฎุงุฑุฌู',
                amount DECIMAL(10,2) NOT NULL DEFAULT 0.00,
                category TEXT NOT NULL DEFAULT 'ูุชููุน',
                income_type TEXT NOT NULL DEFAULT 'ููุฏู',
                description TEXT DEFAULT '',
                income_date DATE NOT NULL DEFAULT (date('now')),
                notes TEXT DEFAULT '',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูุฅูุฑุงุฏุงุช ุงูุฎุงุฑุฌูุฉ ูุน ุฅุตูุงุญ ูููุฏ NOT NULL")
        
        # ุฌุฏูู ุงููุตุฑููุงุช - ูุน ููู ุงูุชุฑุงุถูุฉ ูุญู ูุดููุฉ NOT NULL
        cursor.execute("""
            CREATE TABLE expenses (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                school_id INTEGER NOT NULL,
                expense_type TEXT NOT NULL DEFAULT 'ูุตุฑูู ุนุงู',
                amount DECIMAL(10,2) NOT NULL DEFAULT 0.00,
                expense_date DATE NOT NULL DEFAULT (date('now')),
                description TEXT DEFAULT '',
                notes TEXT DEFAULT '',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE CASCADE
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุตุฑููุงุช ูุน ุฅุตูุงุญ ูููุฏ NOT NULL")
        
        # ุฌุฏูู ุงูุฑูุงุชุจ
        cursor.execute("""
            CREATE TABLE salaries (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                staff_type TEXT NOT NULL CHECK (staff_type IN ('teacher', 'employee')),
                staff_id INTEGER NOT NULL,
                base_salary DECIMAL(10,2) NOT NULL,
                paid_amount DECIMAL(10,2) NOT NULL,
                from_date DATE NOT NULL,
                to_date DATE NOT NULL,
                days_count INTEGER NOT NULL,
                payment_date DATE NOT NULL,
                payment_time TIME NOT NULL,
                notes TEXT,
                school_id INTEGER,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id) ON DELETE SET NULL
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุงูุฑูุงุชุจ")
        
        # ุฌุฏูู ุฅุนุฏุงุฏุงุช ุงูุชุทุจูู
        cursor.execute("""
            CREATE TABLE app_settings (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                setting_key TEXT UNIQUE NOT NULL,
                setting_value TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        """)
        print("  โ ุชู ุฅูุดุงุก ุฌุฏูู ุฅุนุฏุงุฏุงุช ุงูุชุทุจูู")
        
        # ุฅูุดุงุก ูุฏุฑุณุฉ ุงูุชุฑุงุถูุฉ
        cursor.execute("""
            INSERT INTO schools (name_ar, name_en, school_types, address, phone)
            VALUES (?, ?, ?, ?, ?)
        """, (
            "ุงููุฏุฑุณุฉ ุงูุงูุชุฑุงุถูุฉ",
            "Default School", 
            "ุฌููุน ุงููุฑุงุญู",
            "ุงูุนููุงู ุงูุงูุชุฑุงุถู",
            "0000000000"
        ))
        school_id = cursor.lastrowid
        print(f"  โ ุชู ุฅูุดุงุก ูุฏุฑุณุฉ ุงูุชุฑุงุถูุฉ ุจุฑูู: {school_id}")
        
        # ุฅูุดุงุก ูุณุชุฎุฏู ุงูุชุฑุงุถู
        import hashlib
        password = "admin123"
        password_hash = hashlib.sha256(password.encode()).hexdigest()
        
        cursor.execute("""
            INSERT INTO users (username, password)
            VALUES (?, ?)
        """, ("admin", password_hash))
        print("  โ ุชู ุฅูุดุงุก ูุณุชุฎุฏู ุงูุชุฑุงุถู: admin / admin123")
        
        # ุญูุธ ุงูุชุบููุฑุงุช
        conn.commit()
        
        # ุฅุบูุงู ุงูุงุชุตุงู
        cursor.close()
        conn.close()
        
        print("\nโ ุชู ุฅุนุงุฏุฉ ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!")
        print("๐ง ุงูุฅุตูุงุญุงุช ุงููุทุจูุฉ:")
        print("   - ุฅุตูุงุญ ูููุฏ NOT NULL ููุญูู school_id ูู ุฌุฏูู external_income")
        print("   - ุฅุตูุงุญ ูููุฏ NOT NULL ููุญูู school_id ูู ุฌุฏูู expenses")
        print("   - ุฅุถุงูุฉ ููู ุงูุชุฑุงุถูุฉ ูุฌููุน ุงูุญููู ุงููุทููุจุฉ")
        print("   - ุฅูุดุงุก ูุฏุฑุณุฉ ุงูุชุฑุงุถูุฉ ูุถูุงู ูุฌูุฏ school_id ุตุงูุญ")
        print("   - ุฅูุดุงุก ูุณุชุฎุฏู ุงูุชุฑุงุถู ููุฏุฎูู ูููุธุงู")
        
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุฅุนุงุฏุฉ ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return False

def main():
    print("๐ง ุฅุนุงุฏุฉ ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุน ุฅุตูุงุญ ูุดุงูู ูููุฏ ุงูุจูุงูุงุช")
    print("=" * 60)
    
    if recreate_database():
        print("\n๐ ุงูุนูููุฉ ููุชููุฉ ุจูุฌุงุญ!")
        print("ููููู ุงูุขู ุชุดุบูู ุงูุชุทุจูู ุจุฏูู ูุดุงูู.")
        return True
    else:
        print("\nโ ูุดูุช ุงูุนูููุฉ!")
        return False

if __name__ == "__main__":
    success = main()
    if not success:
        sys.exit(1)
