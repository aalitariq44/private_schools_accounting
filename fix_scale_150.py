#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุฅุตูุงุญ ุฎุงุต ููุดููุฉ Windows Scale 150%
ูุฐุง ุงูููู ูุญู ูุดููุฉ ุนุฏู ุธููุฑ ุงูุชุทุจูู ุจุดูู ุตุญูุญ ุนูุฏ scale 150%
"""

import os
import sys
from pathlib import Path

def fix_windows_scale_150():
    """ุฅุตูุงุญ ุฎุงุต ููุดููุฉ Windows Scale 150%"""
    
    print("๐ง ุจุฏุก ุฅุตูุงุญ ูุดููุฉ Windows Scale 150%...")
    
    base_dir = Path(__file__).parent
    
    # 1. ุชุญุฏูุซ main.py ูุฏุนู ุฃูุถู ูู Scale 150%
    main_py_path = base_dir / "main.py"
    
    # ูุฑุงุกุฉ ุงูููู ุงูุญุงูู
    with open(main_py_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # ุฅุถุงูุฉ ุฅุนุฏุงุฏุงุช ุฎุงุตุฉ ูู Scale 150%
    scale_fix = '''# ุฅุนุฏุงุฏุงุช ุฎุงุตุฉ ูุญู ูุดููุฉ Windows Scale 150%
QCoreApplication.setAttribute(Qt.AA_ShareOpenGLContexts, True)
QCoreApplication.setAttribute(Qt.AA_EnableHighDpiScaling, True)
QCoreApplication.setAttribute(Qt.AA_UseHighDpiPixmaps, True)
QCoreApplication.setAttribute(Qt.AA_DisableWindowContextHelpButton, True)

# ุชุญุณููุงุช ุฎุงุตุฉ ูู Scale 150%
os.environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
os.environ["QT_SCALE_FACTOR"] = "1" 
os.environ["QT_ENABLE_HIGHDPI_SCALING"] = "1"
os.environ["QT_FONT_DPI"] = "96"  # ุฅุฌุจุงุฑ DPI ููุฎุทูุท
os.environ["QT_DEVICE_PIXEL_RATIO"] = "1"  # ุชุญูู ูู ูุณุจุฉ ุงูุจูุณู'''
    
    if "QT_DEVICE_PIXEL_RATIO" not in content:
        # ุงูุจุญุซ ุนู ูููุน ุงูุฅุนุฏุงุฏุงุช ุงูุญุงููุฉ
        if "QT_ENABLE_HIGHDPI_SCALING" in content:
            content = content.replace(
                'os.environ["QT_ENABLE_HIGHDPI_SCALING"] = "1"',
                scale_fix
            )
        else:
            # ุฅุถุงูุฉ ุงูุฅุนุฏุงุฏุงุช ุจุนุฏ ุงูุงุณุชูุฑุงุฏุงุช
            import_line = "from PyQt5.QtCore import Qt, QDir, QTranslator, QLocale, QCoreApplication"
            if import_line in content:
                content = content.replace(
                    import_line,
                    import_line + "\n\n" + scale_fix
                )
        
        with open(main_py_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print("โ ุชู ุชุญุฏูุซ main.py ูุฏุนู Scale 150%")
    
    # 2. ุฅูุดุงุก ููู ุฅุนุฏุงุฏุงุช ุฎุงุต ูู Scale 150%
    scale_config_path = base_dir / "scale_150_config.py"
    scale_config_content = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุฅุนุฏุงุฏุงุช ุฎุงุตุฉ ูู Windows Scale 150%
"""

# ุฅุนุฏุงุฏุงุช ุงูุฎุทูุท ูู Scale 150%
SCALE_150_FONT_SIZES = {
    "base_font": 11,        # ุจุฏูุงู ูู 14
    "title_font": 18,       # ุจุฏูุงู ูู 24  
    "button_font": 13,      # ุจุฏูุงู ูู 16
    "header_font": 16,      # ุจุฏูุงู ูู 22
    "small_font": 10        # ุจุฏูุงู ูู 12
}

# ุฅุนุฏุงุฏุงุช ุงูุฃุญุฌุงู ูู Scale 150%
SCALE_150_SIZES = {
    "sidebar_width": 200,   # ุจุฏูุงู ูู 280
    "button_height": 35,    # ุจุฏูุงู ูู 45
    "padding": 8,           # ุจุฏูุงู ูู 10
    "margin": 10,           # ุจุฏูุงู ูู 15
    "border_radius": 4      # ุจุฏูุงู ูู 6
}

# ุฅุนุฏุงุฏุงุช ุงููุงูุฐุฉ ูู Scale 150%
SCALE_150_WINDOW = {
    "min_width": 900,       # ุจุฏูุงู ูู 1000
    "min_height": 600,      # ุจุฏูุงู ูู 700
    "default_width": 1200,  # ุญุฌู ุงูุชุฑุงุถู ููุงุณุจ
    "default_height": 800
}

def get_scale_150_settings():
    """ุงูุญุตูู ุนูู ุฅุนุฏุงุฏุงุช Scale 150%"""
    return {
        "fonts": SCALE_150_FONT_SIZES,
        "sizes": SCALE_150_SIZES,
        "window": SCALE_150_WINDOW
    }
'''
    
    with open(scale_config_path, 'w', encoding='utf-8') as f:
        f.write(scale_config_content)
    
    print("โ ุชู ุฅูุดุงุก ููู ุฅุนุฏุงุฏุงุช Scale 150%")
    
    # 3. ุชุญุฏูุซ responsive_design.py ูุฏุนู ุฎุงุต ูู Scale 150%
    responsive_path = base_dir / "core" / "utils" / "responsive_design.py"
    
    with open(responsive_path, 'r', encoding='utf-8') as f:
        responsive_content = f.read()
    
    # ุฅุถุงูุฉ ุฏุงูุฉ ุฎุงุตุฉ ูู Scale 150%
    scale_150_method = '''
    def is_windows_scale_150(self):
        """ุงูุชุญูู ูู ุฃู Windows Scale ูู 150%"""
        return abs(self.dpi_scale - 1.5) < 0.1
    
    def get_scale_150_font_size(self, base_size: int) -> int:
        """ุญุณุงุจ ุญุฌู ุงูุฎุท ุงูููุงุณุจ ูู Scale 150%"""
        if self.is_windows_scale_150():
            # ุชูููู ุญุฌู ุงูุฎุท ุจูุณุจุฉ 25% ูู Scale 150%
            return max(8, int(base_size * 0.75))
        return self.get_font_size(base_size)
    
    def get_scale_150_size(self, base_size: int) -> int:
        """ุญุณุงุจ ุงูุญุฌู ุงูููุงุณุจ ูู Scale 150%"""
        if self.is_windows_scale_150():
            # ุชูููู ุงูุฃุญุฌุงู ุจูุณุจุฉ 30% ูู Scale 150%
            return max(base_size // 2, int(base_size * 0.7))
        return self.get_scaled_size(base_size)
    
    def get_scale_150_window_size(self, min_width: int, min_height: int) -> tuple:
        """ุญุณุงุจ ุญุฌู ุงููุงูุฐุฉ ุงูููุงุณุจ ูู Scale 150%"""
        if self.is_windows_scale_150():
            # ุฃุญุฌุงู ุฎุงุตุฉ ูู Scale 150%
            screen_width = self.screen_geometry.width()
            screen_height = self.screen_geometry.height()
            
            # ุงุณุชุฎุฏุงู ูุณุจุฉ ุฃูุจุฑ ูู ุงูุดุงุดุฉ ูู Scale 150%
            width = min(int(screen_width * 0.85), 1200)
            height = min(int(screen_height * 0.85), 800)
            
            return max(min_width, width), max(min_height, height)
        
        return self.get_window_size(min_width, min_height)'''
    
    if "is_windows_scale_150" not in responsive_content:
        # ุฅุถุงูุฉ ุงูุฏูุงู ุจุนุฏ ุฏุงูุฉ should_use_compact_mode
        insertion_point = "def get_icon_size(self, base_size: int) -> QSize:"
        if insertion_point in responsive_content:
            responsive_content = responsive_content.replace(
                insertion_point,
                scale_150_method + "\n    " + insertion_point
            )
            
            with open(responsive_path, 'w', encoding='utf-8') as f:
                f.write(responsive_content)
            
            print("โ ุชู ุชุญุฏูุซ responsive_design.py ูุฏุนู Scale 150%")
    
    # 4. ุชุญุฏูุซ main_window.py ูุงุณุชุฎุฏุงู ุฅุนุฏุงุฏุงุช Scale 150%
    main_window_path = base_dir / "app" / "main_window.py"
    
    with open(main_window_path, 'r', encoding='utf-8') as f:
        window_content = f.read()
    
    # ุชุญุฏูุซ ุฏุงูุฉ setup_responsive_sizing
    new_sizing_method = '''    def setup_responsive_sizing(self):
        """ุฅุนุฏุงุฏ ุงูุฃุญุฌุงู ุงููุชุฌุงูุจุฉ ูุน DPI ุงูุญุงูู"""
        try:
            from PyQt5.QtWidgets import QApplication
            
            # ุงูุญุตูู ุนูู ูุนูููุงุช ุงูุดุงุดุฉ
            screen = QApplication.primaryScreen()
            screen_geometry = screen.geometry()
            
            # ุงูุชุญูู ูู Scale 150% ูุงูุชุนุงูู ูุนู ุฎุตูุตุงู
            if responsive.is_windows_scale_150():
                print("๐ง ุชู ุงูุชุดุงู Windows Scale 150% - ุชุทุจูู ุฅุนุฏุงุฏุงุช ุฎุงุตุฉ")
                window_width, window_height = responsive.get_scale_150_window_size(
                    config.WINDOW_MIN_WIDTH, 
                    config.WINDOW_MIN_HEIGHT
                )
                # ุชุนููู ุฃุญุฌุงู ุฎุงุตุฉ ูู Scale 150%
                self.setMinimumSize(900, 600)
            else:
                # ุญุณุงุจ ุงูุฃุญุฌุงู ุงูููุงุณุจุฉ ููููุงููุณ ุงูุฃุฎุฑู
                window_width, window_height = responsive.get_window_size(
                    config.WINDOW_MIN_WIDTH, 
                    config.WINDOW_MIN_HEIGHT
                )
                self.setMinimumSize(config.WINDOW_MIN_WIDTH, config.WINDOW_MIN_HEIGHT)
            
            # ุชุนููู ุงูุญุฌู ุงูููุถู
            self.resize(window_width, window_height)
            
            # ุญูุธ ูุนูููุงุช DPI ููุงุณุชุฎุฏุงู ูู ุจุงูู ุงูููููุงุช
            self.dpi_scale = responsive.dpi_scale
            
            logging.info(f"DPI Scale: {responsive.dpi_scale:.2f}, Window: {window_width}x{window_height}")
            if responsive.is_windows_scale_150():
                logging.info("ุชู ุชุทุจูู ุฅุนุฏุงุฏุงุช ุฎุงุตุฉ ูู Windows Scale 150%")
            
        except Exception as e:
            logging.error(f"ุฎุทุฃ ูู ุฅุนุฏุงุฏ ุงูุฃุญุฌุงู ุงููุชุฌุงูุจุฉ: {e}")
            # ูู ุญุงูุฉ ุงูุฎุทุฃุ ุงุณุชุฎุฏู ุงูุฃุญุฌุงู ุงูุงูุชุฑุงุถูุฉ
            self.setMinimumSize(config.WINDOW_MIN_WIDTH, config.WINDOW_MIN_HEIGHT)
            self.resize(1200, 800)
            self.dpi_scale = 1.0'''
    
    # ุงูุจุญุซ ุนู ุฏุงูุฉ setup_responsive_sizing ูุงุณุชุจุฏุงููุง
    import re
    pattern = r'def setup_responsive_sizing\(self\):.*?self\.dpi_scale = 1\.0'
    
    if re.search(pattern, window_content, re.DOTALL):
        window_content = re.sub(pattern, new_sizing_method.strip(), window_content, flags=re.DOTALL)
        
        with open(main_window_path, 'w', encoding='utf-8') as f:
            f.write(window_content)
        
        print("โ ุชู ุชุญุฏูุซ main_window.py ูุฏุนู Scale 150%")
    
    # 5. ุฅูุดุงุก ููู ุงุฎุชุจุงุฑ ุฎุงุต ูู Scale 150%
    test_scale_path = base_dir / "test_scale_150.py"
    test_content = '''#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุงุฎุชุจุงุฑ ุฎุงุต ูู Windows Scale 150%
"""

import sys
import os
from pathlib import Path

# ุฅุถุงูุฉ ูุณุงุฑ ุงููุดุฑูุน
project_root = Path(__file__).resolve().parent
sys.path.insert(0, str(project_root))

from PyQt5.QtWidgets import QApplication, QMessageBox
from PyQt5.QtCore import Qt, QCoreApplication

# ุฅุนุฏุงุฏุงุช ุฎุงุตุฉ ูู Scale 150%
QCoreApplication.setAttribute(Qt.AA_ShareOpenGLContexts, True)
QCoreApplication.setAttribute(Qt.AA_EnableHighDpiScaling, True)
QCoreApplication.setAttribute(Qt.AA_UseHighDpiPixmaps, True)
QCoreApplication.setAttribute(Qt.AA_DisableWindowContextHelpButton, True)

os.environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
os.environ["QT_SCALE_FACTOR"] = "1"
os.environ["QT_ENABLE_HIGHDPI_SCALING"] = "1"
os.environ["QT_FONT_DPI"] = "96"
os.environ["QT_DEVICE_PIXEL_RATIO"] = "1"

def test_scale_150():
    """ุงุฎุชุจุงุฑ Windows Scale 150%"""
    app = QApplication(sys.argv)
    
    try:
        from core.utils.responsive_design import responsive
        
        print("=" * 50)
        print("ุงุฎุชุจุงุฑ Windows Scale 150%")
        print("=" * 50)
        
        print(f"๐ฅ๏ธ  ุญุฌู ุงูุดุงุดุฉ: {responsive.screen_geometry.width()}x{responsive.screen_geometry.height()}")
        print(f"๐ DPI: {responsive.dpi:.1f}")
        print(f"๐ ูููุงุณ DPI: {responsive.dpi_scale:.2f}")
        print(f"๐ Windows Scale ุงูููุชุดู: {responsive.dpi_scale * 100:.0f}%")
        
        is_150 = responsive.is_windows_scale_150()
        print(f"โ Scale 150% ููุชุดู: {'ูุนู' if is_150 else 'ูุง'}")
        
        if is_150:
            print("\\n๐ง ุฅุนุฏุงุฏุงุช Scale 150%:")
            window_size = responsive.get_scale_150_window_size(900, 600)
            print(f"๐ ุญุฌู ุงููุงูุฐุฉ ุงูููุชุฑุญ: {window_size[0]}x{window_size[1]}")
            print(f"๐ ุญุฌู ุฎุท ุงูุนููุงู: {responsive.get_scale_150_font_size(24)}px")
            print(f"๐ ุญุฌู ุฎุท ุงูุฃุฒุฑุงุฑ: {responsive.get_scale_150_font_size(16)}px")
            print(f"๐ ุนุฑุถ ุงูุดุฑูุท ุงูุฌุงูุจู: {responsive.get_scale_150_size(280)}px")
            print(f"๐ณ ุงุฑุชูุงุน ุงูุฃุฒุฑุงุฑ: {responsive.get_scale_150_size(45)}px")
        
        # ุงุฎุชุจุงุฑ ุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ
        from app.main_window import MainWindow
        
        main_window = MainWindow()
        main_window.show()
        
        # ุฑุณุงูุฉ ูุฌุงุญ
        message = f"""ุชู ุชุญููู ุงูุชุทุจูู ุจูุฌุงุญ!

ุงูุดุงุดุฉ: {responsive.screen_geometry.width()}x{responsive.screen_geometry.height()}
Windows Scale: {responsive.dpi_scale * 100:.0f}%
Scale 150%: {'ููุชุดู' if is_150 else 'ุบูุฑ ููุชุดู'}
ุญุฌู ุงููุงูุฐุฉ: {main_window.width()}x{main_window.height()}

{"โ ุชู ุชุทุจูู ุฅุนุฏุงุฏุงุช ุฎุงุตุฉ ูู Scale 150%" if is_150 else "โน๏ธ ุชู ุงุณุชุฎุฏุงู ุงูุฅุนุฏุงุฏุงุช ุงูุนุงุฏูุฉ"}"""
        
        QMessageBox.information(main_window, "ุงุฎุชุจุงุฑ Scale 150%", message)
        
        return app.exec_()
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: {e}")
        import traceback
        traceback.print_exc()
        
        QMessageBox.critical(None, "ุฎุทุฃ", f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงุฎุชุจุงุฑ Scale 150%:\\n{e}")
        return 1

if __name__ == "__main__":
    test_scale_150()
'''
    
    with open(test_scale_path, 'w', encoding='utf-8') as f:
        f.write(test_content)
    
    print("โ ุชู ุฅูุดุงุก ููู ุงุฎุชุจุงุฑ Scale 150%")
    
    print("\\n๐ ุชู ุฅููุงู ุฅุตูุงุญ ูุดููุฉ Windows Scale 150%!")
    print("\\n๐ ููุงุฎุชุจุงุฑ:")
    print("   โข ุชุดุบูู ุงูุงุฎุชุจุงุฑ: python test_scale_150.py")
    print("   โข ุชุดุบูู ุงูุชุทุจูู: python main.py")
    
    return True

if __name__ == "__main__":
    fix_windows_scale_150()
