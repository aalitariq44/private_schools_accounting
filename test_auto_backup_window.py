#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุชุทุจูู ุงุฎุชุจุงุฑ ูุจุณุท ูููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู
ูุนุฑุถ ูุงูุฐุฉ ุจุณูุทุฉ ูุงุฎุชุจุงุฑ closeEvent
"""

import sys
from pathlib import Path

# ุฅุถุงูุฉ ุงููุฌูุฏ ุงูุฑุฆูุณู ููุชุทุจูู ุฅูู ุงููุณุงุฑ
sys.path.insert(0, str(Path(__file__).parent))

import config
from PyQt5.QtWidgets import QApplication, QMainWindow, QPushButton, QVBoxLayout, QWidget, QLabel, QMessageBox
from PyQt5.QtCore import Qt
from datetime import datetime
from core.backup.backup_manager import backup_manager
from core.utils.logger import log_user_action

class TestAutoBackupWindow(QMainWindow):
    """ูุงูุฐุฉ ุงุฎุชุจุงุฑ ูููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู"""
    
    def __init__(self):
        super().__init__()
        self.setWindowTitle("ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู ุนูุฏ ุงูุฎุฑูุฌ")
        self.setGeometry(300, 300, 500, 300)
        
        # ุฅุนุฏุงุฏ ุงููุงุฌูุฉ
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        layout = QVBoxLayout(central_widget)
        
        # ุนููุงู
        title = QLabel("๐งช ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู ุนูุฏ ุงูุฎุฑูุฌ")
        title.setStyleSheet("font-size: 16px; font-weight: bold; margin: 20px;")
        layout.addWidget(title)
        
        # ูุนูููุงุช
        info = QLabel(f"""
ุงูุฅุนุฏุงุฏุงุช ุงูุญุงููุฉ:
โข AUTO_BACKUP_ON_EXIT: {config.AUTO_BACKUP_ON_EXIT}
โข AUTO_BACKUP_SHOW_SUCCESS_MESSAGE: {config.AUTO_BACKUP_SHOW_SUCCESS_MESSAGE}
โข AUTO_BACKUP_CONFIRMATION_DIALOG: {config.AUTO_BACKUP_CONFIRMATION_DIALOG}

๐ฏ ูุงุฎุชุจุงุฑ ุงูููุฒุฉ:
1. ุงุถุบุท ุฒุฑ "ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุชููุงุฆู" ูุงุฎุชุจุงุฑ ุงูุฏุงูุฉ ูุจุงุดุฑุฉ
2. ุฃู ุงุถุบุท ุฒุฑ ุฅุบูุงู ุงููุงูุฐุฉ (โ) ูุงุฎุชุจุงุฑ closeEvent
        """)
        info.setStyleSheet("margin: 20px; background: #f0f0f0; padding: 15px; border-radius: 5px;")
        layout.addWidget(info)
        
        # ุฃุฒุฑุงุฑ ุงูุงุฎุชุจุงุฑ
        test_btn = QPushButton("๐ง ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุชููุงุฆู ูุจุงุดุฑุฉ")
        test_btn.clicked.connect(self.test_auto_backup)
        test_btn.setStyleSheet("padding: 10px; font-size: 14px;")
        layout.addWidget(test_btn)
        
        close_btn = QPushButton("๐ช ุฅุบูุงู ุงูุชุทุจูู (ุงุฎุชุจุงุฑ closeEvent)")
        close_btn.clicked.connect(self.close)
        close_btn.setStyleSheet("padding: 10px; font-size: 14px; background: #e74c3c; color: white;")
        layout.addWidget(close_btn)
        
        # ุฑุณุงูุฉ ุงูุญุงูุฉ
        self.status_label = QLabel("โ ุงูุชุทุจูู ุฌุงูุฒ ููุงุฎุชุจุงุฑ")
        self.status_label.setStyleSheet("margin: 10px; color: green;")
        layout.addWidget(self.status_label)
    
    def test_auto_backup(self):
        """ุงุฎุชุจุงุฑ ุฏุงูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู ูุจุงุดุฑุฉ"""
        try:
            self.status_label.setText("๐ ุฌุงุฑู ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู...")
            QApplication.processEvents()
            
            # ูุญุงููุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู
            result = self.create_auto_backup_on_exit()
            
            if result:
                self.status_label.setText("โ ุชู ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู ุจูุฌุงุญ!")
                QMessageBox.information(self, "ูุฌุญ ุงูุงุฎุชุจุงุฑ", "๐ ุชู ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู ุจูุฌุงุญ!")
            else:
                self.status_label.setText("โ ูุดู ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู")
                QMessageBox.warning(self, "ูุดู ุงูุงุฎุชุจุงุฑ", "โ ูุดู ูู ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู")
                
        except Exception as e:
            self.status_label.setText(f"๐ฅ ุฎุทุฃ: {e}")
            QMessageBox.critical(self, "ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ", f"๐ฅ ุฎุทุฃ ุฃุซูุงุก ุงูุงุฎุชุจุงุฑ:\n\n{e}")
    
    def create_auto_backup_on_exit(self):
        """ูุณุฎุฉ ูุจุณุทุฉ ูู ุฏุงูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู"""
        try:
            from PyQt5.QtWidgets import QProgressDialog
            
            # ุนุฑุถ ุดุฑูุท ุงูุชูุฏู
            progress = QProgressDialog(
                "๐ ุฌุงุฑู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ุชููุงุฆูุฉ ููุงุฎุชุจุงุฑ...",
                None, 0, 0, self
            )
            progress.setWindowTitle("ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู")
            progress.setModal(True)
            progress.show()
            QApplication.processEvents()
            
            # ุฅูุดุงุก ูุตู
            description = f"ุงุฎุชุจุงุฑ ูุณุฎุฉ ุงุญุชูุงุทูุฉ ุชููุงุฆูุฉ - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
            
            # ูุญุงููุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู
            success, message = backup_manager.create_backup(description)
            
            # ุฅุบูุงู ุดุฑูุท ุงูุชูุฏู
            progress.close()
            
            if success:
                if config.AUTO_BACKUP_SHOW_SUCCESS_MESSAGE:
                    QMessageBox.information(
                        self, "ูุฌุญ ุงููุณุฎ ุงูุงุญุชูุงุทู",
                        "โ ุชู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ ุงูุชููุงุฆูุฉ ุจูุฌุงุญ!\n\n" + message
                    )
                log_user_action("backup auto-exit test", description)
                return True
            else:
                QMessageBox.warning(
                    self, "ูุดู ุงููุณุฎ ุงูุงุญุชูุงุทู",
                    f"โ ูุดู ูู ุงููุณุฎ ุงูุงุญุชูุงุทู:\n\n{message}"
                )
                return False
                
        except Exception as e:
            QMessageBox.critical(
                self, "ุฎุทุฃ ูู ุงููุณุฎ ุงูุงุญุชูุงุทู",
                f"๐ฅ ุฎุทุฃ ุฃุซูุงุก ุงููุณุฎ ุงูุงุญุชูุงุทู:\n\n{e}"
            )
            return False
    
    def closeEvent(self, event):
        """ุงุฎุชุจุงุฑ closeEvent ูุน ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู"""
        try:
            # ุงูุชุญูู ูู ุชูุนูู ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู
            if config.AUTO_BACKUP_ON_EXIT:
                reply = QMessageBox.question(
                    self,
                    "ุงุฎุชุจุงุฑ ุฅุบูุงู ุงูุชุทุจูู",
                    "๐งช ูุฐุง ุงุฎุชุจุงุฑ ูููุฒุฉ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู!\n\n"
                    "ูู ุชุฑูุฏ ุฅุบูุงู ุงูุชุทุจููุ\n\n"
                    "๐ ุณูุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ุชููุงุฆูุฉ ูุจู ุงูุฅุบูุงู.",
                    QMessageBox.Yes | QMessageBox.No,
                    QMessageBox.No
                )
            else:
                reply = QMessageBox.question(
                    self,
                    "ุฅุบูุงู ุงูุชุทุจูู",
                    "ูู ุชุฑูุฏ ุฅุบูุงู ุงูุชุทุจููุ\n\n"
                    "(ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู ูุนุทู ูู ุงูุฅุนุฏุงุฏุงุช)",
                    QMessageBox.Yes | QMessageBox.No,
                    QMessageBox.No
                )
            
            if reply == QMessageBox.Yes:
                if config.AUTO_BACKUP_ON_EXIT:
                    # ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ุชููุงุฆูุฉ
                    backup_success = self.create_auto_backup_on_exit()
                    
                    if backup_success is False:
                        # ูุดู ุงููุณุฎ ุงูุงุญุชูุงุทู - ุงุณุฃู ุงููุณุชุฎุฏู
                        continue_reply = QMessageBox.question(
                            self,
                            "ูุดู ุงููุณุฎ ุงูุงุญุชูุงุทู",
                            "โ ูุดู ูู ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู.\n\n"
                            "ูู ุชุฑูุฏ ุงููุชุงุจุนุฉ ูุงูุฎุฑูุฌ ุจุฏูู ูุณุฎุฉ ุงุญุชูุงุทูุฉุ",
                            QMessageBox.Yes | QMessageBox.No,
                            QMessageBox.No
                        )
                        
                        if continue_reply == QMessageBox.No:
                            event.ignore()
                            return
                
                print("โ ุชู ุงุฎุชุจุงุฑ closeEvent ุจูุฌุงุญ!")
                print("๐ ุงูููุฒุฉ ุชุนูู ุจุดูู ุตุญูุญ!")
                event.accept()
            else:
                event.ignore()
                
        except Exception as e:
            print(f"โ ุฎุทุฃ ูู closeEvent: {e}")
            QMessageBox.critical(
                self, "ุฎุทุฃ",
                f"๐ฅ ุฎุทุฃ ุฃุซูุงุก ุฅุบูุงู ุงูุชุทุจูู:\n\n{e}"
            )
            event.accept()

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ููุงุฎุชุจุงุฑ"""
    app = QApplication(sys.argv)
    
    # ุฅูุดุงุก ุงููุงูุฐุฉ
    window = TestAutoBackupWindow()
    window.show()
    
    print("๐ ุชุทุจูู ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุงุญุชูุงุทู ุงูุชููุงุฆู")
    print("๐ ุงุฎุชุจุฑ ุงูููุฒุฉ ุนุจุฑ:")
    print("   1. ุงูุถุบุท ุนูู 'ุงุฎุชุจุงุฑ ุงููุณุฎ ุงูุชููุงุฆู ูุจุงุดุฑุฉ'")
    print("   2. ุงูุถุบุท ุนูู ุฒุฑ ุฅุบูุงู ุงููุงูุฐุฉ (โ)")
    print("   3. ุฃู ุงูุถุบุท ุนูู 'ุฅุบูุงู ุงูุชุทุจูู'")
    
    # ุชุดุบูู ุงูุชุทุจูู
    sys.exit(app.exec_())

if __name__ == "__main__":
    main()
